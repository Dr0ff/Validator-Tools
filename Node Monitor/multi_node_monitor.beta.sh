#!/bin/bash

# --- –û–ë–©–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò (–ö–û–¢–û–†–´–ï –ù–£–ñ–ù–û –ó–ê–ü–û–õ–ù–ò–¢–¨ –í–†–£–ß–ù–£–Æ!) ---
TELEGRAM_BOT_TOKEN="–í–ê–®_–ë–û–¢_–¢–û–ö–ï–ù" # –ó–ê–ü–û–õ–ù–ò–¢–¨!
TELEGRAM_ALERT_CHAT_IDS=( "–í–ê–®_–ß–ê–¢_ID" ) # –ó–ê–ü–û–õ–ù–ò–¢–¨!
TELEGRAM_REPORT_CHAT_IDS=( "–í–ê–®_–ß–ê–¢_ID" ) # –ó–ê–ü–û–õ–ù–ò–¢–¨!
TELEGRAM_INFO_CHAT_IDS=( "–í–ê–®_–ß–ê–¢_ID" ) # –ó–ê–ü–û–õ–ù–ò–¢–¨!

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Ç–µ–≥–∞ –≤ Telegram. –û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º (""), –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –Ω–∏–∫–æ–≥–æ —Ç–µ–≥–∞—Ç—å.
# –ü—Ä–∏–º–µ—Ä: "@Bob_the_Builder"
USER_TO_PING="" # –ó–ê–ü–û–õ–ù–ò–¢–¨ –ü–†–ò –ñ–ï–õ–ê–ù–ò–ò!

# –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≥–¥–µ –æ–±—ã—á–Ω–æ –Ω–∞—Ö–æ–¥—è—Ç—Å—è .go/bin –∏ .<node_name> –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–æ–¥.
# –ü—Ä–∏–º–µ—Ä: "/home/lilfox" –∏–ª–∏ "/home/ubuntu"
# –≠–¢–û –ö–†–ê–ô–ù–ï –í–ê–ñ–ù–û –ó–ê–ü–û–õ–ù–ò–¢–¨ –ü–†–ê–í–ò–õ–¨–ù–û!
BASE_USER_HOME="/home/YOUR_USER_NAME" # –ó–ê–ü–û–õ–ù–ò–¢–¨! (–ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –≤—ã lilfox, —ç—Ç–æ –±—É–¥–µ—Ç /home/lilfox)

MISSED_BLOCKS_THRESHOLD=10
CRON_INTERVAL=10
PROPOSALS_CHECK_INTERVAL=$((12 * 60 * 60))

# –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Ñ–∞–π–ª–æ–≤ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞.
# –ú—ã –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –∏—Ö —Ä—è–¥–æ–º —Å —Å–∞–º–∏–º —Å–∫—Ä–∏–ø—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ ~/node_monitor.
CURRENT_SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
BASE_STATE_DIR="${CURRENT_SCRIPT_DIR}"

# --- –û–ë–†–ê–ë–û–¢–ö–ê –ê–†–ì–£–ú–ï–ù–¢–û–í –ö–û–ú–ê–ù–î–ù–û–ô –°–¢–†–û–ö–ò ---
GLOBAL_DEBUG=false
if [[ "$1" == "--debug" ]]; then
    GLOBAL_DEBUG=true
    echo "–ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –≤–∫–ª—é—á–µ–Ω."
fi

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –°–ï–¢–ï–ô (–ù–£–ñ–ù–û –ó–ê–ü–û–õ–ù–ò–¢–¨ –í–†–£–ß–ù–£–Æ!) ---
declare -A NETWORKS

# –ü—Ä–∏–º–µ—Ä –¥–ª—è Juno
 NETWORKS[Juno,NODE_BINARY]="${BASE_USER_HOME}/go/bin/junod"
 NETWORKS[Juno,NODE_HOME]="${BASE_USER_HOME}/.juno"
 NETWORKS[Juno,NODE_RPC_PORT]="26657"
 NETWORKS[Juno,VALOPER_ADDRESS]="junovaloper1......"
 NETWORKS[Juno,PUBKEY_JSON]='{"@type":"/cosmos.crypto.ed25519.PubKey","key":"4p1GAuF7....."}'

# –ü—Ä–∏–º–µ—Ä –¥–ª—è Osmosis
# NETWORKS[Osmosis,NODE_BINARY]="${BASE_USER_HOME}/go/bin/osmosisd"
# NETWORKS[Osmosis,NODE_HOME]="${BASE_USER_HOME}/.osmosisd"
# NETWORKS[Osmosis,NODE_RPC_PORT]="26657"
# NETWORKS[Osmosis,VALOPER_ADDRESS]="osmovaloper1..."
# NETWORKS[Osmosis,PUBKEY_JSON]='{"@type":"/cosmos.crypto.ed25519.PubKey","key":"..."}'

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è jq
command -v jq >/dev/null 2>&1 || { echo >&2 "jq –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ."; exit 1; }

# --- –û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–ô –í TELEGRAM ---
send_telegram() {
    local message="$1"
    shift
    local types=("$@")
    local full_message="$message"

    if [[ " ${types[@]} " =~ " ALERT " ]] && [[ -n "$USER_TO_PING" ]]; then
        full_message="${full_message} ${USER_TO_PING}"
    fi

    for type in "${types[@]}"; do
        local chat_array_name="TELEGRAM_${type}_CHAT_IDS[@]"
        for CHAT_ID in "${!chat_array_name}"; do
            curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
                -d chat_id="$CHAT_ID" -d text="$full_message" > /dev/null
        done
    done
}

# --- –ü–†–û–í–ï–†–ö–ê RPC –ò –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò ---
check_node_health() {
    local node_name="$1"
    local rpc_port="$2"
    local debug_enabled="$3"

    local rpc_url="http://localhost:${rpc_port}"

    [ "$debug_enabled" = true ] && echo "DEBUG: –ü—Ä–æ–≤–µ—Ä–∫–∞ RPC –¥–ª—è ${node_name} –Ω–∞ ${rpc_url}"

    if ! curl -s --max-time 10 "${rpc_url}/health" | grep -q 'result'; then
        send_telegram "‚õîÔ∏è –ù–û–î–ê –ù–ï–î–û–°–¢–£–ü–ù–ê: ${node_name} –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ RPC (–ø–æ—Ä—Ç ${rpc_port})" "ALERT"
        return 1
    fi

    local sync_status
    if ! sync_status=$(curl -s "${rpc_url}/status" | jq -r '.result.sync_info.catching_up'); then
        send_telegram "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ sync_info –æ—Ç ${node_name}" "ALERT"
        return 1
    fi

    if [[ "$sync_status" != "false" ]]; then
        send_telegram "‚ö†Ô∏è ${node_name} –≤ —Ä–µ–∂–∏–º–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏. –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–ø—É—Å–∫–∏." "ALERT" "INFO"
    fi
    return 0
}

# --- –ü–†–û–í–ï–†–ö–ê –ó–ê–ö–õ–Æ–ß–ï–ù–ò–Ø –í –¢–Æ–†–¨–ú–£ ---
check_validator_jailed() {
    local node_name="$1"
    local node_binary="$2"
    local node_home="$3"
    local rpc_port="$4"
    local valoper_address="$5"
    local pubkey_json="$6"
    local debug_enabled="$7"

    local jailed
    jailed=$("$node_binary" query staking validator "$valoper_address" --node "tcp://localhost:$rpc_port" --home "$node_home" --output json 2>/dev/null | jq -r '.validator.jailed // empty')

    if [ -z "$jailed" ]; then
        local jailed_until
        jailed_until=$("$node_binary" query slashing signing-info "$pubkey_json" --node "tcp://localhost:$rpc_port" --home "$node_home" --output json 2>/dev/null | jq -r '.jailed_until // empty')
        if [[ -n "$jailed_until" && "$jailed_until" != "0001-01-01T00:00:00Z" ]]; then
            jailed="true"
        else
            jailed="false"
        fi
    fi

    echo "$jailed"
}

# --- –ü–†–û–í–ï–†–ö–ê –ü–†–û–ü–£–©–ï–ù–ù–´–• –ë–õ–û–ö–û–í ---
check_missed_blocks() {
    local node_name="$1"
    local node_binary="$2"
    local node_home="$3"
    local rpc_port="$4"
    local pubkey_json="$5"
    local debug_enabled="$6"
    local state_file="$7"
    local daily_report_file="$8"

    local QUERY_OUTPUT
    if ! QUERY_OUTPUT=$("$node_binary" query slashing signing-info "$pubkey_json" \
        --node "tcp://localhost:$rpc_port" \
        --home "$node_home" \
        --output json 2>&1); then
        send_telegram "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ signing-info ${node_name}" "ALERT"
        return 1
    fi

    [ "$debug_enabled" = true ] && echo -e "DEBUG: signing-info for ${node_name}:\n$QUERY_OUTPUT"

    local CURRENT_MISSED_BLOCKS=0
    if echo "$QUERY_OUTPUT" | jq -e '.missed_blocks_counter' >/dev/null 2>&1; then
        CURRENT_MISSED_BLOCKS=$(echo "$QUERY_OUTPUT" | jq -r '.missed_blocks_counter')
    elif [ "$debug_enabled" = true ]; then
        echo "DEBUG: missed_blocks_counter not found for ${node_name}. Assuming 0."
    fi

    local LAST_MISSED_BLOCKS=0
    [ -f "$state_file" ] && LAST_MISSED_BLOCKS=$(cat "$state_file")
    local NEWLY_MISSED_BLOCKS=$((CURRENT_MISSED_BLOCKS - LAST_MISSED_BLOCKS))
    [ "$debug_enabled" = true ] && echo "DEBUG: –ü—Ä–æ–≤–µ—Ä–∫–∞ ${node_name}: –Ω–æ–≤—ã—Ö –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –±–ª–æ–∫–æ–≤ –∑–∞ ${CRON_INTERVAL} –º–∏–Ω—É—Ç: ${NEWLY_MISSED_BLOCKS}. –û–±—â–∏–π: ${CURRENT_MISSED_BLOCKS}."

    if [ "$NEWLY_MISSED_BLOCKS" -ge "$MISSED_BLOCKS_THRESHOLD" ] && [ "$NEWLY_MISSED_BLOCKS" -gt 0 ]; then
        send_telegram "üö® –¢–†–ï–í–û–ì–ê: ${node_name} –ø—Ä–æ–ø—É—Å—Ç–∏–ª ${NEWLY_MISSED_BLOCKS} –±–ª–æ–∫–æ–≤ –∑–∞ ${CRON_INTERVAL} –º–∏–Ω—É—Ç! –û–±—â–∏–π —Å—á–µ—Ç—á–∏–∫: ${CURRENT_MISSED_BLOCKS}." "ALERT"
    fi

    echo "$CURRENT_MISSED_BLOCKS" > "$state_file"

    local CURRENT_DAY=$(date +%j)
    local LAST_DAY=0
    [ -f "$daily_report_file" ] && LAST_DAY=$(cat "$daily_report_file")

    if [ "$CURRENT_DAY" -ne "$LAST_DAY" ]; then
        local YESTERDAY_COUNTER=0
        [ -f "$daily_report_file.counter" ] && YESTERDAY_COUNTER=$(cat "$daily_report_file.counter")
        if [ "$YESTERDAY_COUNTER" -ne 0 ]; then
            local MISSED_FOR_24H=$((LAST_MISSED_BLOCKS - YESTERDAY_COUNTER))
            send_telegram "üìä –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –¥–ª—è ${node_name}:%0A–ó–∞ —Å—É—Ç–∫–∏ –ø—Ä–æ–ø—É—â–µ–Ω–æ: ${MISSED_FOR_24H} –±–ª–æ–∫–æ–≤.%0A–¢–µ–∫—É—â–∏–π —Å—á–µ—Ç—á–∏–∫: ${CURRENT_MISSED_BLOCKS}." "REPORT" "INFO"
        fi
        echo "$CURRENT_DAY" > "$daily_report_file"
        echo "$CURRENT_MISSED_BLOCKS" > "$daily_report_file.counter"
        [ "$debug_enabled" = true ] && echo "DEBUG: –°—É—Ç–æ—á–Ω—ã–π —Å—á–µ—Ç—á–∏–∫ –¥–ª—è ${node_name} —Å–±—Ä–æ—à–µ–Ω."
    fi
}

# --- –ü–†–û–í–ï–†–ö–ê –ù–û–í–´–• –ü–†–û–ü–û–ó–ê–õ–û–í ---
check_new_proposals() {
    local node_name="$1"
    local node_binary="$2"
    local node_home="$3"
    local rpc_port="$4"
    local debug_enabled="$5"
    local proposals_last_check_file="$6"
    local seen_proposals_file="$7"

    local now=$(date +%s)
    local last_check=0
    [ -f "$proposals_last_check_file" ] && last_check=$(cat "$proposals_last_check_file")

    if (( now - last_check < PROPOSALS_CHECK_INTERVAL )); then
        [ "$debug_enabled" = true ] && echo "INFO: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–ø–æ–∑–∞–ª–æ–≤ –¥–ª—è ${node_name} –ø—Ä–æ–ø—É—â–µ–Ω–∞. –ü—Ä–æ—à–ª–æ $(( now - last_check )) —Å–µ–∫., –Ω—É–∂–Ω–æ $PROPOSALS_CHECK_INTERVAL."
        return
    fi

    local ACTIVE_PROPOSALS_JSON
    if ! ACTIVE_PROPOSALS_JSON=$("$node_binary" query gov proposals --proposal-status voting-period --node "tcp://localhost:$rpc_port" --output json); then
        send_telegram "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–ø–æ–∑–∞–ª–æ–≤ ${node_name}" "ALERT"
        return
    fi

    local ACTIVE_IDS
    ACTIVE_IDS=$(echo "$ACTIVE_PROPOSALS_JSON" | jq -r '.proposals[].proposal_id' 2>/dev/null)
    touch "$seen_proposals_file"

    local NEW_IDS=()
    for ID in $ACTIVE_IDS; do
        if ! grep -q "^$ID$" "$seen_proposals_file"; then
            NEW_IDS+=("$ID")
        fi
    done

    if [ "${#NEW_IDS[@]}" -gt 0 ]; then
        local MESSAGE="üó≥Ô∏è –ù–æ–≤—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –≤ —Å–µ—Ç–∏ ${node_name}:%0AID: ${NEW_IDS[*]}"
        send_telegram "$MESSAGE" "INFO"
        for ID in "${NEW_IDS[@]}"; do
            echo "$ID" >> "$seen_proposals_file"
        done
    elif [ "$debug_enabled" = true ]; then
        echo "INFO: –ù–æ–≤—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–ø–æ–∑–∞–ª–æ–≤ –¥–ª—è ${node_name} –Ω–µ—Ç."
    fi

    echo "$now" > "$proposals_last_check_file"
}

# --- –ó–ê–ü–£–°–ö –û–°–ù–û–í–ù–û–ô –õ–û–ì–ò–ö–ò –î–õ–Ø –í–°–ï–• –°–ï–¢–ï–ô ---
for NET_NAME in "${!NETWORKS[@]}"; do
    NODE_NAME=${NET_NAME}
    NODE_BINARY=${NETWORKS[${NET_NAME},NODE_BINARY]}
    NODE_HOME=${NETWORKS[${NET_NAME},NODE_HOME]}
    NODE_RPC_PORT=${NETWORKS[${NET_NAME},NODE_RPC_PORT]}
    VALOPER_ADDRESS=${NETWORKS[${NET_NAME},VALOPER_ADDRESS]}
    PUBKEY_JSON=${NETWORKS[${NET_NAME},PUBKEY_JSON]}

    # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –±—É–¥—É—Ç –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ, —á—Ç–æ –∏ —Å–∫—Ä–∏–ø—Ç
    STATE_FILE="${BASE_STATE_DIR}/missed_blocks_state_${NODE_NAME}.txt"
    DAILY_REPORT_FILE="${BASE_STATE_DIR}/daily_report_state_${NODE_NAME}.txt"
    PROPOSALS_LAST_CHECK_FILE="${BASE_STATE_DIR}/proposals_last_check_${NODE_NAME}.txt"
    SEEN_PROPOSALS_FILE="${BASE_STATE_DIR}/seen_proposals_${NODE_NAME}.txt"

    [ "$GLOBAL_DEBUG" = true ] && echo "--- –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è —Å–µ—Ç–∏: ${NODE_NAME} ---"
    
    if ! check_node_health "$NODE_NAME" "$NODE_RPC_PORT" "$GLOBAL_DEBUG"; then
        [ "$GLOBAL_DEBUG" = true ] && echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –Ω–æ–¥—ã ${NODE_NAME} –ø—Ä–æ–≤–∞–ª–µ–Ω–∞. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–∞–ª—å–Ω–µ–π—à–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è —ç—Ç–æ–π —Å–µ—Ç–∏."
        continue
    fi

    local IS_JAILED=$(check_validator_jailed "$NODE_NAME" "$NODE_BINARY" "$NODE_HOME" "$NODE_RPC_PORT" "$VALOPER_ADDRESS" "$PUBKEY_JSON" "$GLOBAL_DEBUG")
    if [[ "$IS_JAILED" == "true" ]]; then
        local jailed_until_date=$("$NODE_BINARY" query slashing signing-info "$PUBKEY_JSON" --node "tcp://localhost:$NODE_RPC_PORT" --home "$NODE_HOME" --output json 2>/dev/null | jq -r '.jailed_until' | cut -d'.' -f1)
        send_telegram "üö® –í–ù–ò–ú–ê–ù–ò–ï: ${NODE_NAME} —Å–æ–æ–±—â–∞–µ—Ç, —á—Ç–æ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä –í –¢–Æ–†–¨–ú–ï! –í–æ–∑–º–æ–∂–Ω–æ –¥–æ: ${jailed_until_date}" "ALERT"
        [ "$GLOBAL_DEBUG" = true ] && echo "–í–∞–ª–∏–¥–∞—Ç–æ—Ä ${NODE_NAME} –≤ —Ç—é—Ä—å–º–µ. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–∞–ª—å–Ω–µ–π—à–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –±–ª–æ–∫–æ–≤."
    fi

    check_missed_blocks "$NODE_NAME" "$NODE_BINARY" "$NODE_HOME" "$NODE_RPC_PORT" "$PUBKEY_JSON" "$GLOBAL_DEBUG" "$STATE_FILE" "$DAILY_REPORT_FILE"

    check_new_proposals "$NODE_NAME" "$NODE_BINARY" "$NODE_HOME" "$NODE_RPC_PORT" "$GLOBAL_DEBUG" "$PROPOSALS_LAST_CHECK_FILE" "$SEEN_PROPOSALS_FILE"
    
    [ "$GLOBAL_DEBUG" = true ] && echo "--- –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Å–µ—Ç–∏: ${NODE_NAME} –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ---"
    [ "$GLOBAL_DEBUG" = true ] && echo ""
done
