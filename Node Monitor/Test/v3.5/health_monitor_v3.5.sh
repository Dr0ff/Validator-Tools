#!/usr/bin/env bash

# —Å–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ v3.5 (–¥–ª—è bash v4+)
# –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: jq, curl
# –î–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω—É–∂–µ–Ω —É—Å—Ç–∞–Ω–æ–≤—à–∏–∫! installer*.sh
# –ó–∞–ø—É—Å–∫–∞—Ç—å —Å —Ñ–ª–∞–≥–æ–º --debug –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞.

set -eo pipefail

# --- –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï ---
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"
CONFIG_FILE="${SCRIPT_DIR}/config.json"
STATE_DIR="${SCRIPT_DIR}/states"

# --- –û–ë–†–ê–ë–û–¢–ö–ê –ê–†–ì–£–ú–ï–ù–¢–û–í –ò –õ–û–ì–ò–†–û–í–ê–ù–ò–ï ---
GLOBAL_DEBUG=false
if [[ "${1:-}" == "--debug" ]]; then
    GLOBAL_DEBUG=true
fi

log_debug() {
    if [ "$GLOBAL_DEBUG" = true ]; then
        echo "[DEBUG] $(date -u -R): $1" >&2
    fi
}

# --- –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô ---
command -v jq >/dev/null 2>&1 || { echo >&2 "–û–®–ò–ë–ö–ê: jq –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."; exit 1; }
command -v curl >/dev/null 2>&1 || { echo >&2 "–û–®–ò–ë–ö–ê: curl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."; exit 1; }

# --- –ó–ê–ì–†–£–ó–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò ---
if [ ! -f "$CONFIG_FILE" ]; then
    echo >&2 "–û–®–ò–ë–ö–ê: –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${CONFIG_FILE}"
    exit 1
fi

# --- –£–¢–ò–õ–ò–¢–´ ---

read_config() {
    jq -r "$1" "$CONFIG_FILE"
}

convert_to_timestamp() {
    local date_string="$1"
    if [[ -z "$date_string" || "$date_string" == "null" || "$date_string" == "0001-01-01T00:00:00Z" ]]; then
        echo ""
        return
    fi
    # –≠—Ç–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞ –¥–ª—è GNU/Linux –∏ macOS (—Å coreutils)
    date -d "$date_string" "+%s" 2>/dev/null
}

send_telegram() {
    local message_body="$1"
    local network_user_tag="$2"
    shift 2
    local types=("$@")
    local full_message="$message_body"

    if [[ " ${types[*]} " =~ " ALERT " ]] && [[ -n "$network_user_tag" ]]; then
        full_message="${full_message} ${network_user_tag}"
    fi

    for type in "${types[@]}"; do
        local chat_ids_json
        chat_ids_json=$(read_config ".telegram.${type,,}_chat_ids")

        if [[ -z "$chat_ids_json" || "$chat_ids_json" == "[]" ]]; then
            log_debug "–ú–∞—Å—Å–∏–≤ —á–∞—Ç–æ–≤ –¥–ª—è '${type}' –ø—É—Å—Ç. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É."
            continue
        fi

        echo "$chat_ids_json" | jq -r '.[]' | while read -r chat_id; do
            if [ -z "$TELEGRAM_BOT_TOKEN" ] || [ -z "$chat_id" ]; then
                log_debug "WARN: TELEGRAM_BOT_TOKEN –∏–ª–∏ CHAT_ID –¥–ª—è —Ç–∏–ø–∞ '${type}' –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω."
                continue
         	fi
            log_debug "–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–∏–ø–∞ '${type}' –≤ —á–∞—Ç ID: ${chat_id}"
            curl -s --show-error -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
                -d chat_id="$chat_id" \
                -d text="$full_message" >/dev/null
        done
    done
}

curl_with_retry() {
    local -n output_var="$1" # Nameref –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    local url="$2"
    local jq_path="$3"
    local context="$4"
    local last_error_message=""

    for (( attempt=1; attempt<=$MAX_RETRIES; attempt++ )); do
        log_debug "–ü–æ–ø—ã—Ç–∫–∞ ${attempt}/${MAX_RETRIES} –¥–ª—è ${context} (URL: ${url})."
        if response=$(curl -s --fail --max-time 15 "$url" 2>&1); then
            if echo "$response" | jq -e "$jq_path" >/dev/null 2>&1; then
                log_debug "–£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è ${context}."
                output_var="$response"
                return 0 # Success
            else
                last_error_message="JSON –æ—Ç–≤–µ—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç '${jq_path}' –∏–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–µ–Ω: ${response}"
                log_debug "JSON –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª—è ${context} –ø—Ä–æ–≤–∞–ª–µ–Ω–∞ (–ø–æ–ø—ã—Ç–∫–∞ ${attempt}). –û—à–∏–±–∫–∞: '${last_error_message}'"
            fi
        else
            last_error_message="$response"
            log_debug "–ü–æ–ø—ã—Ç–∫–∞ ${attempt} –¥–ª—è ${context} –ø—Ä–æ–≤–∞–ª–µ–Ω–∞. –û—à–∏–±–∫–∞: '${last_error_message}'"
        fi
        if [ "$attempt" -lt "$MAX_RETRIES" ]; then
            sleep "$RETRY_DELAY_SECONDS"
        fi
    done
    output_var="$last_error_message"
    return 1 # Failure
}

# --- –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò –ü–†–û–í–ï–†–ö–ò ---

check_rest_api() {
    local node_name="$1"
    local rest_api_base_url="$2"
    local current_user_tag="$3"
    local health_check_url="${rest_api_base_url}/cosmos/staking/v1beta1/params"
    local health_check_output

    if ! curl_with_retry health_check_output "$health_check_url" '.params' "${node_name} Health Check"; then
        send_telegram "‚õîÔ∏è –ù–û–î–ê –ù–ï–î–û–°–¢–£–ü–ù–ê!%0A%0A–°–µ—Ç—å: ${node_name^^}%0AURL REST API: ${rest_api_base_url}%0A–ü—Ä–∏—á–∏–Ω–∞: –ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ–≤–∞–ª–∏–¥–µ–Ω –ø–æ—Å–ª–µ ${MAX_RETRIES} –ø–æ–ø—ã—Ç–æ–∫.%0A–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${health_check_output}" "${current_user_tag}" "ALERT"
        return 1
    fi
    return 0
}

check_validator_jailed() {
    local node_name="$1"
    local rest_api_base_url="$2"
    local valoper_address="$3"
    local current_user_tag="$4"
    local -n moniker_ref="$5" # Nameref –¥–ª—è –º–æ–Ω–∏–∫–µ—Ä–∞
    local validator_status_url="${rest_api_base_url}/cosmos/staking/v1beta1/validators/${valoper_address}"
    local validator_info_output

    if ! curl_with_retry validator_info_output "$validator_status_url" '.validator' "${node_name} Staking Status"; then
        send_telegram "‚ùå –û–®–ò–ë–ö–ê –ó–ê–ü–†–û–°–ê –°–¢–ê–¢–£–°–ê –í–ê–õ–ò–î–ê–¢–û–†–ê (Staking)!%0A%0A–°–µ—Ç—å: ${node_name^^}%0A–ü—Ä–∏—á–∏–Ω–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ –ø–æ—Å–ª–µ ${MAX_RETRIES} –ø–æ–ø—ã—Ç–æ–∫.%0A–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${validator_info_output}%0A–ü—Ä–æ–≤–µ—Ä—å—Ç–µ REST API –∏–ª–∏ VALOPER_ADDRESS." "${current_user_tag}" "ALERT"
        return 1
    fi

    moniker_ref=$(echo "$validator_info_output" | jq -r '(.validator.description.moniker // .description.moniker // "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–æ–Ω–∏–∫–µ—Ä")')
    log_debug "–ú–æ–Ω–∏–∫–µ—Ä –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ ${node_name}: '${moniker_ref}'"

    if [[ $(echo "$validator_info_output" | jq -r '(.validator.jailed // .jailed // "false") | tostring') == "true" ]]; then
        local unbonding_or_jailed_until_raw
        unbonding_or_jailed_until_raw=$(echo "$validator_info_output" | jq -r '(.validator.unbonding_time // .validator.jailed_until // empty)')

        local jailed_until_date_formatted="–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞"
        local jailed_until_timestamp
        jailed_until_timestamp=$(convert_to_timestamp "$unbonding_or_jailed_until_raw")

        if [[ -n "$jailed_until_timestamp" ]] && (( jailed_until_timestamp > $(date +%s) )); then
            jailed_until_date_formatted="–æ–∂–∏–¥–∞–µ—Ç—Å—è –¥–æ: $(date -d "@${jailed_until_timestamp}" "+%Y-%m-%d %H:%M:%S %Z")"
        fi
        send_telegram "üö® –í–ù–ò–ú–ê–ù–ò–ï: –í–ê–õ–ò–î–ê–¢–û–† –í –¢–Æ–†–¨–ú–ï!%0A%0A–°–µ—Ç—å: ${node_name^^}%0A–í–∞–ª–∏–¥–∞—Ç–æ—Ä: ${moniker_ref}%0A–°—Ä–æ–∫: ${jailed_until_date_formatted}" "${current_user_tag}" "ALERT"
        return 1 # Jailed
    fi
    return 0 # Not jailed
}

get_missed_block_count() {
    local node_name="$1"
    local rest_api_base_url="$2"
    local valcons_address="$3"
    local current_user_tag="$4"
    local moniker="$5"
    local api_version="$6"
    local -n count_ref="$7" # Nameref –¥–ª—è —Å—á–µ—Ç—á–∏–∫–∞
    local signing_info_url="${rest_api_base_url}/cosmos/slashing/${api_version}/signing_infos/${valcons_address}"
    local signing_info_output

    if ! curl_with_retry signing_info_output "$signing_info_url" '.val_signing_info' "${node_name} Signing Info (${api_version})"; then
        send_telegram "‚ùå –û–®–ò–ë–ö–ê –ó–ê–ü–†–û–°–ê SIGNING-INFO!%0A%0A–°–µ—Ç—å: ${node_name^^}%0A–í–∞–ª–∏–¥–∞—Ç–æ—Ä: ${moniker}%0AVALCONS: ${valcons_address}%0A–ü—Ä–∏—á–∏–Ω–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å signing-info (API: ${api_version}) –ø–æ—Å–ª–µ ${MAX_RETRIES} –ø–æ–ø—ã—Ç–æ–∫.%0A–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${signing_info_output}%0A–ü—Ä–æ–≤–µ—Ä—å—Ç–µ REST API, VALCONS_ADDRESS –∏–ª–∏ –≤–µ—Ä—Å–∏—é API –≤ config.json." "${current_user_tag}" "ALERT"
        return 1
    fi
    count_ref=$(echo "$signing_info_output" | jq -r '.val_signing_info.missed_blocks_counter | tonumber? // "0"')
    log_debug "–¢–µ–∫—É—â–∏–π —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –±–ª–æ–∫–æ–≤ –¥–ª—è ${node_name} (${moniker}): ${count_ref}."
    return 0
}

process_daily_report() {
    local node_name="$1"
    local moniker="$2"
    local current_user_tag="$3"
    local current_missed_blocks="$4"
    local daily_report_file="$5"
    local daily_counter_file="${daily_report_file}.counter"
    local current_day
    current_day=$(date +%j)
    local last_reported_day=0

    if [ -f "$daily_report_file" ]; then
        last_reported_day=$(cat "$daily_report_file")
    fi

    if [ "$current_day" -ne "$last_reported_day" ]; then
        log_debug "–ù–∞—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π –¥–µ–Ω—å –¥–ª—è ${node_name}. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞."
        local yesterday_counter=0
        if [ -f "$daily_counter_file" ]; then
            yesterday_counter=$(cat "$daily_counter_file")
        fi

        echo "$current_day" > "$daily_report_file"
        echo "$current_missed_blocks" > "$daily_counter_file"

        if [ "$yesterday_counter" -ne 0 ]; then
            local missed_for_24h=$((current_missed_blocks - yesterday_counter))
            if (( missed_for_24h < 0 )); then
                missed_for_24h=0
            fi
            send_telegram "üìä –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á—ë—Ç%0A%0A–°–µ—Ç—å: ${node_name^^}%0A–í–∞–ª–∏–¥–∞—Ç–æ—Ä: ${moniker}%0A–ó–∞ —Å—É—Ç–∫–∏ –ø—Ä–æ–ø—É—â–µ–Ω–æ: ${missed_for_24h} –±–ª–æ–∫–æ–≤.%0A–¢–µ–∫—É—â–∏–π —Å—á–µ—Ç—á–∏–∫: ${current_missed_blocks}." "${current_user_tag}" "REPORT" "INFO"
        else
            log_debug "–°—á–µ—Ç—á–∏–∫ –∑–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –¥–µ–Ω—å –¥–ª—è ${node_name} —Ä–∞–≤–µ–Ω 0. –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω."
        fi
    fi
}

check_missed_blocks() {
    local node_name="$1"
    local rest_api_base_url="$2"
    local valoper_address="$3"
    local valcons_address="$4"
    local current_user_tag="$5"
    local state_file="$6"
    local daily_report_file="$7"
    local api_version="$8"
    local moniker

    if [ -z "$valoper_address" ] || [ -z "$valcons_address" ]; then
        log_debug "VALOPER –∏–ª–∏ VALCONS –∞–¥—Ä–µ—Å –¥–ª—è ${node_name} –Ω–µ —É–∫–∞–∑–∞–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º."
        return
    fi

    if ! check_validator_jailed "$node_name" "$rest_api_base_url" "$valoper_address" "$current_user_tag" moniker; then
        log_debug "–í–∞–ª–∏–¥–∞—Ç–æ—Ä ${node_name} –≤ —Ç—é—Ä—å–º–µ. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –±–ª–æ–∫–æ–≤."
        return
    fi

    local current_missed_blocks=0
    if ! get_missed_block_count "$node_name" "$rest_api_base_url" "$valcons_address" "$current_user_tag" "$moniker" "$api_version" current_missed_blocks; then
        return
    fi

    local last_missed_blocks=0
    if [ -f "$state_file" ]; then
        last_missed_blocks=$(cat "$state_file")
    fi

    local newly_missed_blocks=$((current_missed_blocks - last_missed_blocks))
    log_debug "–ü—Ä–æ–≤–µ—Ä–∫–∞ ${node_name} (${moniker}): –Ω–æ–≤—ã—Ö –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –±–ª–æ–∫–æ–≤ –∑–∞ ${CRON_INTERVAL_MINUTES} –º–∏–Ω—É—Ç: ${newly_missed_blocks}. –û–±—â–∏–π: ${current_missed_blocks}."

    if [ "$newly_missed_blocks" -ge "$MISSED_BLOCKS_THRESHOLD" ]; then
        send_telegram "üö® –¢–†–ï–í–û–ì–ê: –ü—Ä–æ–ø—É—â–µ–Ω—ã –±–ª–æ–∫–∏!%0A%0A–°–µ—Ç—å: ${node_name^^}%0A–í–∞–ª–∏–¥–∞—Ç–æ—Ä: ${moniker}%0A–ù–æ–≤—ã—Ö –ø—Ä–æ–ø—É—Å–∫–æ–≤: ${newly_missed_blocks} –∑–∞ ${CRON_INTERVAL_MINUTES} –º–∏–Ω.%0A–û–±—â–∏–π —Å—á–µ—Ç—á–∏–∫: ${current_missed_blocks}." "${current_user_tag}" "ALERT"
    fi

    echo "$current_missed_blocks" > "$state_file"

    process_daily_report "$node_name" "$moniker" "$current_user_tag" "$current_missed_blocks" "$daily_report_file"
}

# --- –ì–õ–ê–í–ù–´–ô –¶–ò–ö–õ –í–´–ü–û–õ–ù–ï–ù–ò–Ø ---
main() {
    log_debug "----------------------------------------------------------------------------"
    log_debug "–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞. –í—Ä–µ–º—è: $(date -u -R)"
    log_debug "----------------------------------------------------------------------------"

    # –ó–∞–≥—Ä—É–∑–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
    TELEGRAM_BOT_TOKEN=$(read_config ".telegram.bot_token")
    DEFAULT_COSMOS_DIRECTORY_URL=$(read_config ".global.cosmos_directory_url")
    MISSED_BLOCKS_THRESHOLD=$(read_config ".global.missed_blocks_threshold")
    CRON_INTERVAL_MINUTES=$(read_config ".global.cron_interval_minutes")
    MAX_RETRIES=$(read_config ".global.max_retries")
    RETRY_DELAY_SECONDS=$(read_config ".global.retry_delay_seconds")
    DELAY_BETWEEN_NETWORKS_SECONDS=$(read_config ".global.delay_between_networks_seconds")

    mkdir -p "$STATE_DIR"

    local network_count
    network_count=$(read_config ".networks | length")

    for (( i=0; i<network_count; i++ )); do
        local node_name valoper_address valcons_address current_user_tag
        node_name=$(read_config ".networks[${i}].name")
        valoper_address=$(read_config ".networks[${i}].valoper_address")
        valcons_address=$(read_config ".networks[${i}].valcons_address")
        current_user_tag=$(read_config ".networks[${i}].user_tag")

        log_debug "--- –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è —Å–µ—Ç–∏: ${node_name} ---"

        local rest_api_base_url="${DEFAULT_COSMOS_DIRECTORY_URL}/${node_name,,}"

        if ! check_rest_api "$node_name" "$rest_api_base_url" "$current_user_tag"; then
            log_debug "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ REST API –¥–ª—è ${node_name} –ø—Ä–æ–≤–∞–ª–µ–Ω–∞."
            continue
        fi

        local state_file="${STATE_DIR}/missed_blocks_state_${node_name}.txt"
        local daily_report_file="${STATE_DIR}/daily_report_state_${node_name}.txt"
        local slashing_api_version
        slashing_api_version=$(read_config ".networks[${i}].slashing_api_version // \"v1beta1\"")

        check_missed_blocks "$node_name" "$rest_api_base_url" "$valoper_address" "$valcons_address" "$current_user_tag" "$state_file" "$daily_report_file" "$slashing_api_version"

        if [ "$GLOBAL_DEBUG" = true ]; then
            send_telegram "‚úÖ DEBUG: –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è —Å–µ—Ç–∏ ${node_name^^} –ø—Ä–æ–π–¥–µ–Ω—ã." "" "INFO"
        fi

        log_debug "--- –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Å–µ—Ç–∏: ${node_name} –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ---"

        if (( i < network_count - 1 )); then
            log_debug "–ü–∞—É–∑–∞ ${DELAY_BETWEEN_NETWORKS_SECONDS} —Å–µ–∫—É–Ω–¥."
            sleep "$DELAY_BETWEEN_NETWORKS_SECONDS"
        fi
    done

    log_debug "----------------------------------------------------------------------------"
    log_debug "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞. –í—Ä–µ–º—è: $(date -u -R)"
    log_debug "----------------------------------------------------------------------------"
    echo "$(date +'%Y-%m-%d %H:%M:%S') [INFO] –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–¥–æ—Ä–æ–≤—å—è –Ω–æ–¥ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç—Ä–∞–±–æ—Ç–∞–ª."
}

main
